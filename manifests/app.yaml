apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: "nginx"
  name: elastic-stack-app
spec:
  rules:
  - host: elastic-stack-app.lvh.me
    http:
      paths:
        - backend:
            serviceName: elastic-stack-app
            servicePort: http
          path: /
---
apiVersion: v1
kind: Service
metadata:
  name: elastic-stack-app
spec:
  ports:
    - protocol: TCP
      port: 80
      targetPort: http
      name: http
  selector:
    app: elastic-stack-app
  clusterIP: None
---
apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: elastic-stack-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: elastic-stack-app
  template:
    metadata:
      labels:
        app: elastic-stack-app
    spec:
      containers:
      - image: jnatherley/elastic-stack-app:latest
        name: elastic-stack-app
        imagePullPolicy: Always
        env:
        - name: DATABASE_CONNECTION_STRING
          value: root:password@(mysql.default.svc.cluster.local:3306)/db
        - name: HASH
          value: "1234"
        - name: RANDOM_USER_ENDPOINT
          value: https://randomuser.me/api/
        - name: TAG
          value: "7.6.2"
        - name: ELASTIC_VERSION
          value: "7.6.2"
        - name: ELASTIC_APM_SERVER_URL
          value: http://quickstart-apm-http.default.svc.cluster.local:8200
        - name: ELASTIC_APM_SECRET_TOKEN
          value: ELASTIC_APM_SECRET_TOKEN
        - name: ELASTIC_APM_SERVICE_NAME
          value: elastic-stack-app
        ports:
        - containerPort: 80
          name: http